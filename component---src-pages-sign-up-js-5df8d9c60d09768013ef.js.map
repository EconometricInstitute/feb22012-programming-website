{"version":3,"sources":["webpack:///./src/images/email-example.png","webpack:///./src/components/user/CreateAccountForm.js","webpack:///./src/components/user/ConfirmEmail.js","webpack:///./src/pages/sign-up.js"],"names":["module","exports","Row","styled","div","Form","form","InfoBox","FormContainer","CreateAccountForm","onClick","e","a","preventDefault","setState","submitting","triedSubmitting","validate","canSubmit","createAccount","email","state","password","password_confirmation","authenticate","username","props","onComplete","message","Object","entries","forEach","o","key","msg","newMessage","capitalizeFirstLetter","replace","t","JSON","stringify","error","errorObj","_error2","handleInput","name","target","value","newState","validatePassword","validateEmail","indexOf","undefined","render","this","context","loggedIn","navigate","onChange","href","rel","TextField","variant","type","autoComplete","label","fullWidth","onBlur","showPassword","Button","disabled","color","to","React","Component","withTranslation","withSimpleErrorBoundary","StyledImage","img","ConfirmEmail","src","EmailExample","alt","SignInPage","step","onStepComplete","prevState","window","scrollTo","stepComponent","CourseOptionsEditor","courseVariant","Layout","title","Container","contextType","LoginStateContext","withLoginStateContext"],"mappings":"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","file":"component---src-pages-sign-up-js-5df8d9c60d09768013ef.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/email-example-e3d05414bf68e89f670423b3427e112d.png\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { TextField, Button } from \"@material-ui/core\"\nimport { createAccount, authenticate } from \"../../services/moocfi\"\nimport { capitalizeFirstLetter } from \"../../util/strings\"\nimport { navigate } from \"gatsby\"\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\nimport { withTranslation } from \"react-i18next\"\nimport styled from \"styled-components\"\nimport withSimpleErrorBoundary from \"../../util/withSimpleErrorBoundary\"\n\nconst Row = styled.div`\n  margin-bottom: 1.5rem;\n`\n\nconst Form = styled.form``\n\nconst InfoBox = styled.div`\n  margin-bottom: 2rem;\n`\n\nconst FormContainer = styled.div`\n  height: 100%;\n  margin-top: 2rem;\n`\n\nclass CreateAccountForm extends React.Component {\n  onClick = async e => {\n    e.preventDefault()\n    this.setState({ submitting: true, triedSubmitting: true })\n    if (!this.validate()) {\n      this.setState({ canSubmit: false, submitting: false })\n      return\n    }\n    try {\n      const res = await createAccount({\n        email: this.state.email,\n        password: this.state.password,\n        password_confirmation: this.state.password_confirmation,\n      })\n      await authenticate({\n        username: this.state.email,\n        password: this.state.password,\n      })\n      this.props.onComplete()\n    } catch (error) {\n      try {\n        let message = \"\"\n        Object.entries(error).forEach(o => {\n          const key = o[0]\n          const value = o[1]\n          value.forEach(msg => {\n            let newMessage = capitalizeFirstLetter(\n              `${key.replace(/_/g, \" \")} ${msg}.`,\n            )\n            if (newMessage === \"Email has already been taken.\") {\n              newMessage = this.props.t(\"emailInUse\")\n            }\n            message = `${message} ${newMessage}`\n          })\n        })\n\n        if (message === \"\") {\n          message =\n            this.props.t(\"problemCreatingAccount\") + JSON.stringify(error)\n        }\n        this.setState({ error: message, submitting: false, errorObj: error })\n      } catch (_error2) {\n        this.setState({ error: JSON.stringify(error), submitting: false })\n      }\n\n      this.setState({ submitting: false })\n    }\n  }\n\n  handleInput = e => {\n    const name = e.target.name\n    const value = e.target.value\n    this.setState({ [name]: value }, () => {\n      this.validate()\n    })\n  }\n\n  validate = () => {\n    let newState = {\n      error: \"\",\n      errorObj: {},\n    }\n    const {\n      email,\n      password,\n      password_confirmation,\n      validatePassword,\n      validateEmail,\n      triedSubmitting,\n    } = this.state\n    if (email && validateEmail) {\n      if (email.indexOf(\"@\") === -1) {\n        newState.error += this.props.t(\"noAt\")\n        newState.errorObj.email = this.props.t(\"noAt\")\n      }\n      if (email && email.indexOf(\".\") === -1) {\n        newState.error += this.props.t(\"noAt\")\n        newState.errorObj.email = this.props.t(\"noAt\")\n      }\n    }\n\n    if (password && password_confirmation && validatePassword) {\n      if (password !== password_confirmation) {\n        newState.error += this.props.t(\"passwordsNoMatch\")\n        newState.errorObj.password = this.props.t(\"passwordsNoMatch\")\n        newState.errorObj.password_confirmation = this.props.t(\n          \"passwordsNoMatch\",\n        )\n      }\n    }\n\n    if (newState.error === \"\") {\n      newState.error = false\n      newState.canSubmit = true\n    }\n\n    if (!email || !password || !password_confirmation) {\n      if (triedSubmitting) {\n        newState.canSubmit = false\n      }\n      return false\n    }\n    this.setState(newState)\n    return !newState.error\n  }\n\n  state = {\n    email: undefined,\n    password: undefined,\n    password_confirmation: undefined,\n    submitting: false,\n    error: false,\n    errorObj: {},\n    validatePassword: false,\n    validateEmail: false,\n    canSubmit: true,\n    triedSubmitting: true,\n  }\n\n  render() {\n    if (this.context.loggedIn) {\n      navigate(\"/\")\n      return <div>Redirecting...</div>\n    }\n    return (\n      <FormContainer>\n        <h1>{this.props.t(\"createAccount\")}</h1>\n        <Form onChange={this.validate}>\n          <InfoBox>\n            {this.props.t(\"courseUses\")}{\" \"}\n            <OutboundLink\n              href=\"https://mooc.fi\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              mooc.fi\n            </OutboundLink>{\" \"}\n            {this.props.t(\"courseUses2\")}\n          </InfoBox>\n\n          <Row>\n            <TextField\n              variant=\"outlined\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              label={this.props.t(\"email\")}\n              error={this.state.errorObj.email}\n              fullWidth\n              value={this.state.email}\n              onChange={this.handleInput}\n              onBlur={() => {\n                this.setState({ validateEmail: true }, () => {\n                  this.validate()\n                })\n              }}\n            />\n          </Row>\n          <Row>\n            <TextField\n              variant=\"outlined\"\n              type={this.state.showPassword ? \"text\" : \"password\"}\n              label={this.props.t(\"password\")}\n              name=\"password\"\n              error={this.state.errorObj.password}\n              fullWidth\n              value={this.state.password}\n              onChange={this.handleInput}\n            />\n          </Row>\n          <Row>\n            <TextField\n              variant=\"outlined\"\n              type={this.state.showPassword ? \"text\" : \"password\"}\n              label={this.props.t(\"passwordAgain\")}\n              name=\"password_confirmation\"\n              error={this.state.errorObj.password_confirmation}\n              fullWidth\n              value={this.state.password_confirmation}\n              onChange={this.handleInput}\n              onBlur={() => {\n                this.setState({ validatePassword: true }, () => {\n                  this.validate()\n                })\n              }}\n            />\n          </Row>\n\n          <Row>\n            <Button\n              onClick={this.onClick}\n              disabled={this.state.submitting || !this.state.canSubmit}\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              type=\"submit\"\n            >\n              {this.props.t(\"create\")}\n            </Button>\n          </Row>\n        </Form>\n\n        <Row>\n          <Link to=\"/sign-in\">{this.props.t(\"alreadyHaveAccount\")}</Link>\n        </Row>\n        {this.state.error && (\n          <InfoBox>\n            <b>\n              {this.props.t(\"error\")} {this.state.error}\n            </b>\n          </InfoBox>\n        )}\n      </FormContainer>\n    )\n  }\n}\n\nexport default withTranslation(\"user\")(\n  withSimpleErrorBoundary(CreateAccountForm),\n)\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { withTranslation } from \"react-i18next\"\nimport EmailExample from \"../../images/email-example.png\"\n\nimport styled from \"styled-components\"\nimport withSimpleErrorBoundary from \"../../util/withSimpleErrorBoundary\"\n\nconst InfoBox = styled.div`\n  margin-bottom: 2rem;\n`\n\nconst FormContainer = styled.div`\n  height: 100%;\n  margin-top: 2rem;\n`\n\nconst StyledImage = styled.img`\n  width: 100%;\n  padding: 1rem 0;\n`\n\nclass ConfirmEmail extends React.Component {\n  onClick = async e => {\n    e.preventDefault()\n  }\n\n  state = {\n    email: undefined,\n    password: undefined,\n    submitting: false,\n    error: false,\n  }\n\n  render() {\n    return (\n      <FormContainer>\n        <h1>{this.props.t(\"welcomeToCourse\")}</h1>\n        <InfoBox>\n          <p>{this.props.t(\"emailSent\")} </p>\n\n          <p>{this.props.t(\"emailExample\")}</p>\n\n          <StyledImage\n            src={EmailExample}\n            alt={this.props.t(\"emaiLExampleAria\")}\n          />\n        </InfoBox>\n        <p>\n          {this.props.t(\"nowContinue\")}{\" \"}\n          <Link to=\"/osa-1\">{this.props.t(\"toMaterial\")}</Link>.\n        </p>\n      </FormContainer>\n    )\n  }\n}\n\nexport default withTranslation(\"user\")(withSimpleErrorBoundary(ConfirmEmail))\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\n\nimport Layout from \"../templates/Layout\"\nimport CreateAccountForm from \"../components/user/CreateAccountForm\"\nimport CourseOptionsEditor from \"../components/user/CourseOptionsEditor\"\nimport ConfirmEmail from \"../components/user/ConfirmEmail\"\nimport LoginStateContext, {\n  withLoginStateContext,\n} from \"../contexes/LoginStateContext\"\nimport Container from \"../components/Container\"\n\nclass SignInPage extends React.Component {\n  static contextType = LoginStateContext\n\n  state = {\n    step: 1,\n  }\n\n  onStepComplete = () => {\n    this.setState(prevState => ({\n      step: prevState.step + 1,\n    }))\n    if (typeof window !== \"undefined\") {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    let stepComponent\n    if (this.state.step === 1) {\n      stepComponent = <CreateAccountForm onComplete={this.onStepComplete} />\n    } else if (this.state.step === 2) {\n      stepComponent = (\n        <CourseOptionsEditor\n          courseVariant=\"nodl\"\n          onComplete={this.onStepComplete}\n        />\n      )\n    } else {\n      stepComponent = <ConfirmEmail onComplete={this.onStepComplete} />\n    }\n\n    return (\n      <Layout>\n        <Helmet title=\"Luo käyttäjätunnus\" />\n        <Container>{stepComponent}</Container>\n      </Layout>\n    )\n  }\n}\n\nexport default withLoginStateContext(SignInPage)\n"],"sourceRoot":""}