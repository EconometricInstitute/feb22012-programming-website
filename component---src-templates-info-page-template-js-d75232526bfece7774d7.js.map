{"version":3,"sources":["webpack:///./banner.svg","webpack:///./src/components/Banner.js","webpack:///./src/templates/InfoPageTemplate.js"],"names":["module","exports","BannerWrapper","styled","header","BannerImage","Heading","div","SubHeading","withSimpleErrorBoundary","CourseSettings","default","name","subtitle","ContentWrapper","article","InfoPageTemplate","render","this","props","data","page","frontmatter","htmlAst","partials","getNamedPartials","renderAst","rehypeReact","createElement","React","components","Compiler","Helmet","title","LoginStateContext","Layout","banner","Container","Component"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,sD,qRCOrCC,EAAgBC,IAAOC,OAAV,4EAAGD,CAAH,+MASOE,KAQpBC,EAAUH,IAAOI,IAAV,sEAAGJ,CAAH,6WAgBPK,EAAaL,IAAOI,IAAV,yEAAGJ,CAAH,qSAmBDM,eAPA,kBACb,kBAACP,EAAD,KACE,kBAACI,EAAD,KAAUI,IAAeC,QAAQC,MACjC,kBAACJ,EAAD,KAAaE,IAAeC,QAAQE,cCxCxC,IAAMC,EAAiBX,IAAOY,QAAV,uFAAGZ,CAAH,MAECa,E,gLACnBC,OAAA,WAAU,IAAD,EACUC,KAAKC,MAAdC,KAC8BC,KAA9BC,EAFD,EAECA,YAAaC,EAFd,EAEcA,QACfC,EAAWC,cACXC,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAYN,IACXO,SAEH,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,OAAD,CAAQC,MAAOX,EAAYW,QAC3B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,WAAD,KACGb,EAAYc,QAAU,kBAAC,EAAD,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACvB,EAAD,KACE,4BAAKQ,EAAYW,OAChBP,EAAUH,U,GApBiBM,IAAMS","file":"component---src-templates-info-page-template-js-d75232526bfece7774d7.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/banner-04877c610bac4f7bf5945d5f45d068fd.svg\";","import React from \"react\"\nimport styled from \"styled-components\"\nimport CourseSettings from \"../../course-settings\"\n\nimport BannerImage from \"../../banner.svg\"\nimport withSimpleErrorBoundary from \"../util/withSimpleErrorBoundary\"\n\nconst BannerWrapper = styled.header`\n  height: 30rem;\n  max-height: 50vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2rem;\n  background-color: #c0392b;\n  background-image: url(${BannerImage});\n  text-align: center;\n  h1 {\n  }\n  h2 {\n  }\n`\n\nconst Heading = styled.div`\n  font-family: \"Roboto Slab\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    Roboto, \"Helvetica Neue\", Arial, Noto Sans, sans-serif, \"Apple Color Emoji\",\n    \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  font-weight: 500;\n  font-size: 2rem;\n  color: #c0392b;\n  background: white;\n  padding: 0.5rem;\n  margin: 1rem;\n  text-align: center;\n  @media only screen and (min-width: 720px) {\n    font-size: 3rem;\n  }\n`\n\nconst SubHeading = styled.div`\n    font-family: 'Roboto Slab', -apple-system, BlinkMacSystemFont, 'Segoe UI',\n      Roboto, 'Helvetica Neue', Arial, Noto Sans, sans-serif, 'Apple Color Emoji',\n      'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n    font-weight: 500;\n    color: #c0392b;\n    background: white;\n    padding .5rem;\n    font-size: 1.4rem;\n    margin: 0 1rem;\n`\n\nconst Banner = () => (\n  <BannerWrapper>\n    <Heading>{CourseSettings.default.name}</Heading>\n    <SubHeading>{CourseSettings.default.subtitle}</SubHeading>\n  </BannerWrapper>\n)\n\nexport default withSimpleErrorBoundary(Banner)\n","import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport rehypeReact from \"rehype-react\"\nimport { Helmet } from \"react-helmet\"\n\nimport Layout from \"./Layout\"\n\nimport getNamedPartials from \"../partials\"\n\nimport \"./remark.css\"\nimport { LoginStateContextProvider } from \"../contexes/LoginStateContext\"\nimport Container from \"../components/Container\"\nimport Banner from \"../components/Banner\"\n\nconst ContentWrapper = styled.article``\n\nexport default class InfoPageTemplate extends React.Component {\n  render() {\n    const { data } = this.props\n    const { frontmatter, htmlAst } = data.page\n    const partials = getNamedPartials()\n    const renderAst = new rehypeReact({\n      createElement: React.createElement,\n      components: partials,\n    }).Compiler\n\n    return (\n      <Fragment>\n        <Helmet title={frontmatter.title} />\n        <LoginStateContextProvider>\n          <Layout>\n            <Fragment>\n              {frontmatter.banner && <Banner />}\n              <Container>\n                <ContentWrapper>\n                  <h1>{frontmatter.title}</h1>\n                  {renderAst(htmlAst)}\n                </ContentWrapper>\n              </Container>\n            </Fragment>\n          </Layout>\n        </LoginStateContextProvider>\n      </Fragment>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    page: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      html\n      frontmatter {\n        path\n        title\n        banner\n      }\n    }\n  }\n`\n"],"sourceRoot":""}